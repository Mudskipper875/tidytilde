#!/bin/bash
## Script to clean up your $HOME
# XDG directories
: ${XDG_CONFIG_HOME=$HOME/.config}
: ${XDG_CACHE_HOME=$HOME/.cache}
: ${XDG_DATA_HOME=$HOME/.local/share}

# stop when something unexpected happends
set -e
set -o pipefail

# Get a list of dotfiles in home directory
shopt -s nullglob
home_dotfiles=("$HOME"/.*)


# Perform cleaning to dotfile
clean_dotfile() {
	local dotfile_path=$1
	local dotfile_name=${dotfile_path##*/}

	case $dotfile_name in
		#THE XDG FOLDERS
		'.config')
			echo ".config is not applicable"
			;;

		'.cache')
			echo ".cache is not applicable"
			;;
		
		'.local')
			echo ".local is not applicable"
			;;
		# THE REST OF THE DOTFILES

		'.asoundrc')
			echo ".asoundrc: clean process started."
			mkdir -p "$XDG_CONFIG_HOME/alsa"
			mv "$HOME/.asoundrc" "$XDG_CONFIG_HOME/alsa/asoundrc"
			;;

		'.cargo')
			echo '.cargo: clean process started. env variable needs to be set. Check tidytilde_commands in your $HOME'
			echo 'export CARGO_HOME="$XDG_DATA_HOME"/cargo' >> "$HOME/tidytilde_commands"
			mv "$HOME/.cargo" "$XDG_DATA_HOME/cargo"
			;;

		'.fehbg')
			echo '.fehbg: clean process started. Alias needs to be set. Check tidytilde_commands in your $HOME'
			echo 'alias feh="feh --no-fehbg"' >> "$HOME/tidytilde_commands"
			;;

		'.fonts')
			echo '.fonts: clean process started. From now on, use $XDG_DATA_HOME/fonts to store fonts'
			mv "$HOME/.fonts/*" "$XDG_DATA_HOME/fonts/"
			rmdir "$HOME/.fonts"
			;;

		'.gitconfig')
			echo '.gitconfig: clean process started.'
			mv "$HOME/.gitconfig" "$XDG_CONFIG_HOME/git/config"
			;;

		'.gnupg')
			#TODO
			;;

		'.gtkrc-2.0')
			echo '.gtkrc-2.0: clean process started. env variable needs to be set. Check tidytilde_commands in your $HOME'
			echo 'export GTK2_RC_FILES="$XDG_CONFIG_HOME"/gtk-2.0/gtkrc' >> "$HOME/tidytilde_commands"
			mv "$HOME/.gtkrc-2.0" "$XDG_CONFIG_HOME/gtk-2.0/gtkrc"
			;;

		'.irssi')
			echo "irssi clean process started"
			#TODO
			;;
		'.newsboat')
			echo '.newsboat: clean process started.'
			mkdir -p "$XDG_CONFIG_HOME/newsboat"
			mv "$HOME/.newsboat/config" "$HOME/.newsboat/urls" "$XDG_CONFIG_HOME/newsboat"
			mv "$HOME/.newsboat" "$XDG_DATA_HOME/newsboat"
			;;

		'.password-store')
			echo '.password-store: clean process started. env variable needs to be set. Check tidytilde_commands in your $HOME'
			echo 'export PASSWORD_STORE_DIR="$XDG_DATA_HOME"/pass' >> "$HOME/tidytilde_commands"
			mv "$HOME/.password-store" "$XDG_DATA_HOME/pass"
			;;

		'.rustup')
			echo '.rustup: clean process started. env variable needs to be set. Check tidytilde_commands in your $HOME'
			echo 'export RUSTUP_HOME="$XDG_DATA_HOME"/rustup' >> "$HOME/tidytilde_commands"
			mv "$HOME/rustup" "$XDG_DATA_HOME/rustup"
			;;

		'.wgetrc')
			echo '.wgetrc: clean process started. env variable needs to be set. Check tidytilde_commands in your $HOME'
			mkdir -p "$XDG_CONFIG_HOME/wget"
			mv "$HOME/.wgetrc" "$XDG_CONFIG_HOME/wget/wgetrc"
			echo 'export WGETRC="$XDG_CONFIG_HOME"/wget/wgetrc' >> "$HOME/tidytilde_commands"
			;;

		'.wget-hsts')
			if [[ -f "$XDG_CONFIG_HOME/wget/wgetrc" ]]; then
				echo '.wget-hsts: clean process started. Appending to wgetrc.'
				mv "$HOME/.wget-hsts" "$XDG_CONFIG_HOME/wget/wget-hsts"
				echo 'hsts-file=~/.config/wget/wget-hsts' >> "$XDG_CONFIG_HOME/wget/wgetrc"
			else
				echo '.wget-hsts: clean process started. Appending to wgetrc. env variable needs to be set. Check tidytilde_commands in your $HOME'
				mkdir -p "$XDG_CONFIG_HOME/wget"
				mv "$HOME/.wget-hsts" "$XDG_CONFIG_HOME/wget/wget-hsts"
				echo 'hsts-file=~/.config/wget/wget-hsts' >> "$XDG_CONFIG_HOME/wget/wgetrc"
				echo 'export WGETRC="$XDG_CONFIG_HOME"/wget/wgetrc' >> "$HOME/tidytilde_commands"
			fi
			;;

		'.wine')
			echo '.wine: clean process started. env variable needs to be set. Check tidytilde_commands in your $HOME'
			mkdir -p "$XDG_DATA_HOME"/wineprefixes
			echo 'export WINEPREFIX="$XDG_DATA_HOME"/wineprefixes/default' >> "$HOME/tidytilde_commands"
			;;

		'.zshrc')
			echo '.zshrc: clean process started. env variable needs to be set. Check tidytilde_commands in your $HOME'
			mkdir -p "$XDG_CONFIG_HOME/zsh"
			mv "$HOME/.zshrc" "$XDG_CONFIG_HOME/zsh/.zshrc"
			echo 'export ZDOTDIR="$XDG_CONFIG_HOME"/zsh' >> "$HOME/tidytilde_commands"
			;;

		'.')
			echo "irssi clean process started"
			#TODO
			;;
		*)
			echo "clean up process for $dotfile_name isn't added yet"
			;;
	esac
}




for file_path in ${home_dotfiles[@]}; do
	clean_dotfile "$file_path"
done
